// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  login     String   @unique
  password  String   @default("abcd1234")
  nome      String
}

model Motorista {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  nome            String
  celular         String  @default("00000000000")
  telefone        String  @default("00000000000")
  data_nascimento DateTime
  bairro          String
  endereco        String
  vinculo         Vinculo  @relation(fields: [vinculo_id], references: [id])
  vinculo_id      String

  ocupado Boolean @default(false)
}

model Setor {
  id          String        @id @default(uuid())
  codigo      String        @unique
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  nome        String
  sigla       String
  responsavel String
  ramal       String
  Veiculo     Veiculo[]
  Solicitacao Solicitacao[]
}

model Locadora {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  nome      String    @unique
  sigla     String
  bairro    String
  endereco  String
  telefone  String
  Veiculo   Veiculo[]
}

model TipoFrota {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  nome      String    @unique
  Veiculo   Veiculo[]
}

model Veiculo {
  id                   String    @id @default(uuid())
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  placa                String    @unique
  nome                 String
  componentes          String
  quilometragemInicial Int
  quilometragemAtual   Int
  tipoFrota            TipoFrota @relation(fields: [tipo_frota_id], references: [id])
  tipo_frota_id        String
  locadora             Locadora  @relation(fields: [locadora_id], references: [id])
  locadora_id          String
  setor                Setor     @relation(fields: [setor_id], references: [id])
  setor_id             String
  observacao           String    @default("")
  ocupado              Boolean   @default(false)
}

model Solicitacao {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  ramal         String
  atividade     String
  num_ocupantes Int
  status        String
  observacao    String
  usuario       String

  setor    Setor  @relation(fields: [setor_id], references: [id])
  setor_id String

  statusSolicitacao     StatusSolicitacao @relation(fields: [status_solicitacao_id], references: [id])
  status_solicitacao_id String

  tipoSolicitacao      TipoSolicitacao        @relation(fields: [tipo_solicitacao_id], references: [id])
  tipo_solicitacao_id  String
  MunicipioSolicitacao MunicipioSolicitacao[]
}

model Vinculo {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  nome      String      @unique
  motorista Motorista[]
}

model TipoSolicitacao {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  nome        String        @unique
  solicitacao Solicitacao[]
}

model StatusSolicitacao {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  nome        String        @unique
  solicitacao Solicitacao[]
}

model MunicipioSolicitacao {
  id             String      @id @default(uuid())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  solicitacao    Solicitacao @relation(fields: [solicitacao_id], references: [id])
  solicitacao_id String
  municipio      Municipio   @relation(fields: [municipio_id], references: [id])
  municipio_id   String
}

model Municipio {
  id                   String                 @id @default(uuid())
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  nome                 String                 @unique
  MunicipioSolicitacao MunicipioSolicitacao[]
}
