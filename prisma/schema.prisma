generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Locadora {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  nome      String    @unique(map: "Locadora_nome_key")
  sigla     String
  bairro    String
  endereco  String
  telefone  String
  veiculo   Veiculo[]
}

model Motorista {
  id              String         @id @default(uuid())
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  nome            String
  celular         String         @default("00000000000")
  telefone        String         @default("00000000000")
  data_nascimento DateTime
  bairro          String
  endereco        String
  vinculo_id      String
  ocupado         Boolean        @default(false)
  vinculo         Vinculo        @relation(fields: [vinculo_id], references: [id], map: "Motorista_vinculo_id_fkey")
  Movimentacao    Movimentacao[]

  @@index([vinculo_id], map: "Motorista_vinculo_id_fkey")
}

model Municipio {
  id                   String                 @id @default(uuid())
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  nome                 String                 @unique(map: "Municipio_nome_key")
  municipiosolicitacao Municipiosolicitacao[]
}

model Municipiosolicitacao {
  id             String      @id @default(uuid())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  solicitacao_id String
  municipio_id   String
  municipio      Municipio   @relation(fields: [municipio_id], references: [id], map: "MunicipioSolicitacao_municipio_id_fkey")
  solicitacao    Solicitacao @relation(fields: [solicitacao_id], references: [id], map: "MunicipioSolicitacao_solicitacao_id_fkey")

  @@index([municipio_id], map: "MunicipioSolicitacao_municipio_id_fkey")
  @@index([solicitacao_id], map: "MunicipioSolicitacao_solicitacao_id_fkey")
}

model Setor {
  id          String        @id @default(uuid())
  codigo      String        @unique(map: "Setor_codigo_key")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  nome        String
  sigla       String
  responsavel String
  ramal       String
  solicitacao Solicitacao[]
  veiculo     Veiculo[]
}

model Movimentacao {
  id           String             @id @default(uuid())
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  motorista_id String
  motorista    Motorista          @relation(fields: [motorista_id], references: [id], map: "Movimentacao_motorista_id_fkey")
  veiculos_id  String
  veiculo      Veiculo            @relation(fields: [veiculos_id], references: [id], map: "Movimentacao_veiculos_id_fkey")
  dtsaida      DateTime
  observacao   String?
  dtretorno    DateTime?
  status_id    String
  status       MovimentacaoStatus @relation(fields: [status_id], references: [id], map: "Movimentacao_status_id_fkey")

  km_saida     Int?
  km_retorno   Int?
  
  solicitacao_id String      @unique
  Solicitacao    Solicitacao @relation(fields: [solicitacao_id], references: [id], map: "Movimentacao_solicitacao_id_fkey")
}

model MovimentacaoStatus {
  id           String         @id @default(uuid())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  nome         String         @unique(map: "MovimentacaoStatus_nome_key")
  movimentacao Movimentacao[]
}

model Solicitacao {
  id                    String                 @id @default(uuid())
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  data_hora_saida       DateTime
  ramal                 String
  atividade             String
  num_ocupantes         Int
  observacao            String
  usuario               String
  setor_id              String
  status_solicitacao_id String
  tipo_solicitacao_id   String
  setor                 Setor                  @relation(fields: [setor_id], references: [id], map: "Solicitacao_setor_id_fkey")
  statussolicitacao     StatusSolicitacao      @relation(fields: [status_solicitacao_id], references: [id], map: "Solicitacao_status_solicitacao_id_fkey")
  tiposolicitacao       TipoSolicitacao        @relation(fields: [tipo_solicitacao_id], references: [id], map: "Solicitacao_tipo_solicitacao_id_fkey")
  municipiosolicitacao  Municipiosolicitacao[]
  Movimentacao          Movimentacao?

  @@index([setor_id], map: "Solicitacao_setor_id_fkey")
  @@index([status_solicitacao_id], map: "Solicitacao_status_solicitacao_id_fkey")
  @@index([tipo_solicitacao_id], map: "Solicitacao_tipo_solicitacao_id_fkey")
}

model StatusSolicitacao {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  nome        String        @unique(map: "StatusSolicitacao_nome_key")
  solicitacao Solicitacao[]
}

model TipoFrota {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  nome      String    @unique(map: "TipoFrota_nome_key")
  veiculo   Veiculo[]
}

model TipoSolicitacao {
  id          String        @id @default(uuid())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  nome        String        @unique(map: "TipoSolicitacao_nome_key")
  solicitacao Solicitacao[]
}

model Usuario {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  login     String   @unique(map: "Usuario_login_key")
  password  String   @default("abcd1234")
  nome      String

  tipo_id String?
  tipo    TipoUsuario? @relation(fields: [tipo_id], references: [id], map: "Usuario_tipo_id_fkey")
}

model TipoUsuario {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  nome      String    @unique(map: "TipoUser_nome_key")
  usuario   Usuario[]
}

model Veiculo {
  id                   String         @id @default(uuid())
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  placa                String         @unique(map: "Veiculo_placa_key")
  nome                 String
  componentes          String
  quilometragemInicial Int
  quilometragemAtual   Int
  tipo_frota_id        String
  locadora_id          String
  setor_id             String
  observacao           String         @default("")
  ocupado              Boolean        @default(false)
  locadora             Locadora       @relation(fields: [locadora_id], references: [id], map: "Veiculo_locadora_id_fkey")
  setor                Setor          @relation(fields: [setor_id], references: [id], map: "Veiculo_setor_id_fkey")
  tipoFrota            TipoFrota      @relation(fields: [tipo_frota_id], references: [id], map: "Veiculo_tipo_frota_id_fkey")
  Movimentacao         Movimentacao[]

  @@index([locadora_id], map: "Veiculo_locadora_id_fkey")
  @@index([setor_id], map: "Veiculo_setor_id_fkey")
  @@index([tipo_frota_id], map: "Veiculo_tipo_frota_id_fkey")
}

model Vinculo {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  nome      String      @unique(map: "Vinculo_nome_key")
  motorista Motorista[]
}
